import { useState } from "react";
import { BarChart, RefreshCw, Calendar, Filter, CreditCard, ArrowUp, Lock, DownloadCloud } from "lucide-react";
import MusicDistributionHeader from "@/components/MusicDistributionHeader";
import Footer from "@/components/Footer";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Input } from "@/components/ui/input";
import { useToast } from "@/components/ui/use-toast";

// Mock data for the dashboard
const mockReleases = [
  {
    id: "1",
    title: "–õ–µ—Ç–Ω–∏–π –∞–ª—å–±–æ–º",
    coverUrl: "/placeholder.svg",
    releaseDate: "15.07.2023",
    status: "released",
    plays: 12500,
    platforms: ["spotify", "apple", "youtube"],
    revenue: 15600,
  },
  {
    id: "2",
    title: "–ó–∏–º–Ω–∏–µ –º–æ—Ç–∏–≤—ã",
    coverUrl: "/placeholder.svg",
    releaseDate: "10.12.2023",
    status: "released",
    plays: 8200,
    platforms: ["spotify", "vk", "yandex"],
    revenue: 9800,
  },
  {
    id: "3",
    title: "–ù–æ–≤—ã–π —Å–∏–Ω–≥–ª",
    coverUrl: "/placeholder.svg",
    releaseDate: "05.06.2024",
    status: "pending",
    plays: 0,
    platforms: ["spotify", "apple", "youtube", "deezer"],
    revenue: 0,
  },
];

const mockTransactions = [
  { id: "tr1", date: "15.07.2024", amount: 12500, status: "completed", description: "–í—ã–ø–ª–∞—Ç–∞ —Ä–æ—è–ª—Ç–∏ (Spotify, Apple Music)" },
  { id: "tr2", date: "15.06.2024", amount: 8900, status: "completed", description: "–í—ã–ø–ª–∞—Ç–∞ —Ä–æ—è–ª—Ç–∏ (–í—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã)" },
  { id: "tr3", date: "15.05.2024", amount: 7350, status: "completed", description: "–í—ã–ø–ª–∞—Ç–∞ —Ä–æ—è–ª—Ç–∏ (–í—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã)" },
  { id: "tr4", date: "15.04.2024", amount: 6100, status: "completed", description: "–í—ã–ø–ª–∞—Ç–∞ —Ä–æ—è–ª—Ç–∏ (–í—Å–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã)" },
];

const platformIcons: Record<string, string> = {
  spotify: "üéß",
  apple: "üçé",
  youtube: "‚ñ∂Ô∏è",
  deezer: "üéµ",
  tidal: "üåä",
  vk: "‚úåÔ∏è",
  yandex: "üîç",
  amazon: "üì¶",
};

const Dashboard = () => {
  const { toast } = useToast();
  const [filter, setFilter] = useState("all");
  const [period, setPeriod] = useState("month");
  const [activeTab, setActiveTab] = useState("releases");
  const [withdrawalAmount, setWithdrawalAmount] = useState("");
  const [isWithdrawing, setIsWithdrawing] = useState(false);

  const getStatusLabel = (status: string) => {
    if (status === "released") return "–í—ã–ø—É—â–µ–Ω";
    if (status === "pending") return "–í –æ–±—Ä–∞–±–æ—Ç–∫–µ";
    return "–ß–µ—Ä–Ω–æ–≤–∏–∫";
  };

  const getStatusColor = (status: string) => {
    if (status === "released") return "bg-green-500";
    if (status === "pending") return "bg-yellow-500";
    return "bg-gray-500";
  };

  const filteredReleases = mockReleases.filter(release => {
    if (filter === "all") return true;
    return release.status === filter;
  });

  const totalBalance = 45000; // –ò–º–∏—Ç–∞—Ü–∏—è —Ç–µ–∫—É—â–µ–≥–æ –±–∞–ª–∞–Ω—Å–∞

  const handleWithdraw = () => {
    if (!withdrawalAmount || parseFloat(withdrawalAmount) <= 0 || parseFloat(withdrawalAmount) > totalBalance) {
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞",
        variant: "destructive",
      });
      return;
    }

    setIsWithdrawing(true);
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤
    setTimeout(() => {
      setIsWithdrawing(false);
      setWithdrawalAmount("");
      
      toast({
        title: "–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!",
        description: `–°—É–º–º–∞ ${withdrawalAmount} ‚ÇΩ –±—É–¥–µ—Ç –∑–∞—á–∏—Å–ª–µ–Ω–∞ –Ω–∞ –≤–∞—à —Å—á–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π`,
        variant: "default",
      });
    }, 2000);
  };

  const handleGenerateReport = () => {
    toast({
      title: "–û—Ç—á–µ—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω",
      description: "–î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ –≤–∞—à–∏–º –¥–æ—Ö–æ–¥–∞–º –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –≤–∞—à—É —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É",
      variant: "default",
    });
  };

  return (
    <div className="min-h-screen flex flex-col">
      <MusicDistributionHeader />
      <div className="flex-1 py-10 bg-gray-50 dark:bg-gray-900">
        <div className="container mx-auto px-4">
          <div className="flex flex-col md:flex-row justify-between items-start md:items-center mb-8 gap-4">
            <div>
              <h1 className="text-3xl font-bold">–ú–æ–∏ —Ä–µ–ª–∏–∑—ã</h1>
              <p className="text-gray-500 dark:text-gray-400 mt-1">
                –£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏–º–∏ —Ä–µ–ª–∏–∑–∞–º–∏ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
              </p>
            </div>
            <div className="flex flex-col sm:flex-row gap-3">
              <Select value={period} onValueChange={setPeriod}>
                <SelectTrigger className="w-[140px]">
                  <Calendar className="h-4 w-4 mr-2" />
                  <SelectValue placeholder="–ü–µ—Ä–∏–æ–¥" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="week">–ù–µ–¥–µ–ª—è</SelectItem>
                  <SelectItem value="month">–ú–µ—Å—è—Ü</SelectItem>
                  <SelectItem value="year">–ì–æ–¥</SelectItem>
                  <SelectItem value="all">–í—Å–µ –≤—Ä–µ–º—è</SelectItem>
                </SelectContent>
              </Select>
              <Button className="bg-purple-600 hover:bg-purple-700 text-white">
                <RefreshCw className="h-4 w-4 mr-2" />
                –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
              </Button>
            </div>
          </div>

          <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-8">
            <TabsList className="mb-6">
              <TabsTrigger value="releases">–ú–æ–∏ —Ä–µ–ª–∏–∑—ã</TabsTrigger>
              <TabsTrigger value="earnings">–î–æ—Ö–æ–¥—ã</TabsTrigger>
            </TabsList>

            <TabsContent value="releases">
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                <Card>
                  <CardHeader className="pb-2">
                    <CardTitle className="text-lg">–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–π</CardTitle>
                    <CardDescription>–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="text-3xl font-bold">{(mockReleases.reduce((acc, release) => acc + release.plays, 0)).toLocaleString()}</div>
                    <div className="text-sm text-green-600 mt-1">+1,250 –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é</div>
                  </CardContent>
                </Card>
                <Card>
                  <CardHeader className="pb-2">
                    <CardTitle className="text-lg">–î–æ—Ö–æ–¥</CardTitle>
                    <CardDescription>–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="text-3xl font-bold">{(mockReleases.reduce((acc, release) => acc + release.revenue, 0)).toLocaleString()} ‚ÇΩ</div>
                    <div className="text-sm text-green-600 mt-1">+1,800 ‚ÇΩ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü</div>
                  </CardContent>
                </Card>
                <Card>
                  <CardHeader className="pb-2">
                    <CardTitle className="text-lg">–í—Å–µ–≥–æ —Ä–µ–ª–∏–∑–æ–≤</CardTitle>
                    <CardDescription>–ù–∞ –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="text-3xl font-bold">{mockReleases.length}</div>
                    <Progress value={66} className="h-2 mt-2" />
                    <div className="text-sm text-gray-500 mt-1">2 –∏–∑ 3 —Ä–µ–ª–∏–∑–æ–≤ –∞–∫—Ç–∏–≤–Ω—ã</div>
                  </CardContent>
                </Card>
              </div>

              <div className="bg-white dark:bg-gray-800 rounded-lg shadow-sm border border-gray-200 dark:border-gray-700 mb-8">
                <div className="p-4 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center">
                  <h2 className="text-xl font-semibold flex items-center">
                    <BarChart className="h-5 w-5 mr-2 text-purple-500" />
                    –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º
                  </h2>
                  <Button variant="outline" size="sm">
                    <Filter className="h-4 w-4 mr-2" />
                    –§–∏–ª—å—Ç—Ä—ã
                  </Button>
                </div>
                <div className="p-6">
                  <div className="space-y-6">
                    {["spotify", "apple", "youtube", "vk", "yandex"].map((platform) => (
                      <div key={platform} className="space-y-2">
                        <div className="flex justify-between items-center">
                          <div className="flex items-center">
                            <span className="text-xl mr-2">{platformIcons[platform]}</span>
                            <span className="font-medium">{platform.charAt(0).toUpperCase() + platform.slice(1)}</span>
                          </div>
                          <span className="text-sm text-gray-500">{Math.floor(Math.random() * 10000).toLocaleString()} –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏–π</span>
                        </div>
                        <Progress value={Math.random() * 100} className="h-2" />
                      </div>
                    ))}
                  </div>
                </div>
              </div>

              <Tabs defaultValue="all" className="mb-6" onValueChange={setFilter}>
                <TabsList>
                  <TabsTrigger value="all">–í—Å–µ —Ä–µ–ª–∏–∑—ã</TabsTrigger>
                  <TabsTrigger value="released">–í—ã–ø—É—â–µ–Ω–Ω—ã–µ</TabsTrigger>
                  <TabsTrigger value="pending">–í –æ–±—Ä–∞–±–æ—Ç–∫–µ</TabsTrigger>
                </TabsList>
              </Tabs>

              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredReleases.map((release) => (
                  <Card key={release.id} className="overflow-hidden">
                    <div className="aspect-square">
                      <img 
                        src={release.coverUrl} 
                        alt={release.title} 
                        className="w-full h-full object-cover"
                      />
                    </div>
                    <CardHeader className="pb-2">
                      <div className="flex justify-between items-start">
                        <CardTitle>{release.title}</CardTitle>
                        <Badge 
                          className={`${getStatusColor(release.status)} text-white`}
                        >
                          {getStatusLabel(release.status)}
                        </Badge>
                      </div>
                      <CardDescription>–†–µ–ª–∏–∑ –æ—Ç {release.releaseDate}</CardDescription>
                    </CardHeader>
                    <CardContent>
                      <div className="flex justify-between items-center mb-4">
                        <div>
                          <div className="text-sm text-gray-500">–ü—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è</div>
                          <div className="font-semibold">{release.plays.toLocaleString()}</div>
                        </div>
                        <div>
                          <div className="text-sm text-gray-500">–î–æ—Ö–æ–¥</div>
                          <div className="font-semibold">{release.revenue.toLocaleString()} ‚ÇΩ</div>
                        </div>
                      </div>
                      <div className="flex flex-wrap gap-2">
                        {release.platforms.map((platform) => (
                          <Badge key={platform} variant="outline" className="flex items-center gap-1">
                            <span>{platformIcons[platform]}</span>
                            <span>{platform.charAt(0).toUpperCase() + platform.slice(1)}</span>
                          </Badge>
                        ))}
                      </div>
                    </CardContent>
                  </Card>
                ))}
              </div>
            </TabsContent>

            <TabsContent value="earnings" className="space-y-8">
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                <Card>
                  <CardHeader className="pb-2">
                    <CardTitle className="text-lg">–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å</CardTitle>
                    <CardDescription>–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="text-3xl font-bold">{totalBalance.toLocaleString()} ‚ÇΩ</div>
                    <div className="text-sm text-green-600 mt-1">
                      <ArrowUp className="h-3 w-3 inline mr-1" />
                      +12,500 ‚ÇΩ –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ
                    </div>
                  </CardContent>
                </Card>
                
                <Card>
                  <CardHeader className="pb-2">
                    <CardTitle className="text-lg">–í—ã–ø–ª–∞—á–µ–Ω–æ –≤—Å–µ–≥–æ</CardTitle>
                    <CardDescription>–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="text-3xl font-bold">34,850 ‚ÇΩ</div>
                    <Progress value={75} className="h-2 mt-2" />
                    <div className="text-sm text-gray-500 mt-1">–ü–æ—Å–ª–µ–¥–Ω—è—è –≤—ã–ø–ª–∞—Ç–∞: 15.07.2024</div>
                  </CardContent>
                </Card>
                
                <Card>
                  <CardHeader className="pb-2">
                    <CardTitle className="text-lg">–í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤</CardTitle>
                    <CardDescription>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: 1,000 ‚ÇΩ</CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="flex gap-2">
                      <Input 
                        type="number" 
                        placeholder="–°—É–º–º–∞" 
                        value={withdrawalAmount}
                        onChange={(e) => setWithdrawalAmount(e.target.value)}
                        className="flex-1"
                      />
                      <Button 
                        className="bg-purple-600 hover:bg-purple-700 text-white whitespace-nowrap"
                        onClick={handleWithdraw}
                        disabled={isWithdrawing}
                      >
                        {isWithdrawing ? "–û–±—Ä–∞–±–æ—Ç–∫–∞..." : "–í—ã–≤–µ—Å—Ç–∏"}
                      </Button>
                    </div>
                    <div className="text-xs text-gray-500">–°—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ—Å—Ç—É–ø—è—Ç –Ω–∞ –≤–∞—à —Å—á–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π</div>
                  </CardContent>
                </Card>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                <div className="md:col-span-2">
                  <Card>
                    <CardHeader className="pb-2">
                      <div className="flex items-center justify-between">
                        <CardTitle>–ò—Å—Ç–æ—Ä–∏—è –≤—ã–ø–ª–∞—Ç</CardTitle>
                        <Button variant="outline" size="sm" onClick={handleGenerateReport}>
                          <DownloadCloud className="h-4 w-4 mr-2" />
                          –û—Ç—á–µ—Ç
                        </Button>
                      </div>
                    </CardHeader>
                    <CardContent>
                      <div className="space-y-4">
                        {mockTransactions.map((transaction) => (
                          <div 
                            key={transaction.id} 
                            className="flex justify-between items-center p-3 border rounded-lg"
                          >
                            <div>
                              <div className="font-medium">{transaction.date}</div>
                              <div className="text-sm text-gray-500">{transaction.description}</div>
                            </div>
                            <div className="text-right">
                              <div className="font-bold text-green-600">+{transaction.amount.toLocaleString()} ‚ÇΩ</div>
                              <Badge variant="outline" className="text-xs">
                                {transaction.status === "completed" ? "–í—ã–ø–æ–ª–Ω–µ–Ω–æ" : "–í –æ–±—Ä–∞–±–æ—Ç–∫–µ"}
                              </Badge>
                            </div>
                          </div>
                        ))}
                      </div>
                    </CardContent>
                    <CardFooter className="border-t pt-4 flex justify-between">
                      <span className="text-sm text-gray-500">–ü–æ–∫–∞–∑–∞–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏</span>
                      <Button variant="link" className="text-sm text-purple-600 p-0">
                        –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ
                      </Button>
                    </CardFooter>
                  </Card>
                </div>
                
                <Card>
                  <CardHeader className="pb-2">
                    <CardTitle>–ü–ª–∞—Ç–µ–∂–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã</CardTitle>
                    <CardDescription>–°—á–µ—Ç –¥–ª—è –≤—ã–ø–ª–∞—Ç</CardDescription>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    <div className="p-3 bg-gray-50 dark:bg-gray-800 rounded-md">
                      <div className="text-sm text-gray-500">–ë–∞–Ω–∫</div>
                      <div className="font-medium">–°–±–µ—Ä–±–∞–Ω–∫</div>
                    </div>
                    
                    <div className="p-3 bg-gray-50 dark:bg-gray-800 rounded-md">
                      <div className="text-sm text-gray-500">–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã</div>
                      <div className="font-medium flex items-center">
                        <span>‚Ä¢‚Ä¢‚Ä¢‚Ä¢ ‚Ä¢‚Ä¢‚Ä¢‚Ä¢ ‚Ä¢‚Ä¢‚Ä¢‚Ä¢ 5678</span>
                        <Lock className="h-3 w-3 ml-1 text-gray-400" />
                      </div>
                    </div>
                    
                    <div className="p-3 bg-gray-50 dark:bg-gray-800 rounded-md">
                      <div className="text-sm text-gray-500">–í–ª–∞–¥–µ–ª–µ—Ü</div>
                      <div className="font-medium">IVAN IVANOV</div>
                    </div>
                  </CardContent>
                  <CardFooter className="border-t pt-4">
                    <Button variant="outline" className="w-full">
                      <CreditCard className="h-4 w-4 mr-2" />
                      –ò–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã
                    </Button>
                  </CardFooter>
                </Card>
              </div>

              <Card>
                <CardHeader className="pb-2">
                  <CardTitle>–ü–æ–¥—Ä–æ–±–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–æ—Ö–æ–¥–æ–≤</CardTitle>
                  <CardDescription>–ü–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º –∑–∞ {period === "week" ? "–Ω–µ–¥–µ–ª—é" : period === "month" ? "–º–µ—Å—è—Ü" : period === "year" ? "–≥–æ–¥" : "–≤—Å–µ –≤—Ä–µ–º—è"}</CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-6">
                    {["spotify", "apple", "youtube", "vk", "yandex"].map((platform) => {
                      const revenue = Math.floor(Math.random() * 5000) + 1000;
                      const percent = Math.floor(Math.random() * 30) - 10;
                      
                      return (
                        <div key={platform} className="space-y-2">
                          <div className="flex justify-between items-center">
                            <div className="flex items-center">
                              <span className="text-xl mr-2">{platformIcons[platform]}</span>
                              <span className="font-medium">{platform.charAt(0).toUpperCase() + platform.slice(1)}</span>
                            </div>
                            <div className="text-right">
                              <div className="font-semibold">{revenue.toLocaleString()} ‚ÇΩ</div>
                              <div className={`text-xs ${percent >= 0 ? 'text-green-600' : 'text-red-600'}`}>
                                {percent >= 0 ? '+' : ''}{percent}% –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –ø—Ä–æ—à–ª—ã–º –ø–µ—Ä–∏–æ–¥–æ–º
                              </div>
                            </div>
                          </div>
                          <Progress value={(revenue / 5000) * 100} className="h-2" />
                        </div>
                      );
                    })}
                  </div>
                </CardContent>
              </Card>
            </TabsContent>
          </Tabs>
        </div>
      </div>
      <Footer />
    </div>
  );
};

export default Dashboard;